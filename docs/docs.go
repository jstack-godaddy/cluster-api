// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/basic_information/GetAllDataCenters": {
            "get": {
                "description": "Get all the data centers we can provision to.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic Information"
                ],
                "summary": "Get all the data centers we can provision to.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/basic_information/GetAllDatastores": {
            "get": {
                "description": "Get all the data stores you can leverage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic Information"
                ],
                "summary": "Get all the data stores you can leverage.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/basic_information/GetAllEnvironments": {
            "get": {
                "description": "Get all the environments we can provision to.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic Information"
                ],
                "summary": "Get all the environments we can provision to.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/basic_information/GetAllFlavors": {
            "get": {
                "description": "Get all the flavors we can provision on.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic Information"
                ],
                "summary": "Get all the flavors we can provision on.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/basic_information/GetAllNetworkZones": {
            "get": {
                "description": "Get all the network zones we can provision to.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic Information"
                ],
                "summary": "Get all the network zones we can provision to.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cluster": {
            "post": {
                "description": "Create a new cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Create a server cluster",
                "parameters": [
                    {
                        "enum": [
                            "phx",
                            "sxb",
                            "iad"
                        ],
                        "type": "string",
                        "description": "Datacenter",
                        "name": "dc",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Name",
                        "name": "project",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Abbreviation for naming. No more than 8 characters.",
                        "name": "shortname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "mgt",
                            "prd",
                            "cor",
                            "gcn"
                        ],
                        "type": "string",
                        "description": "Network Zone",
                        "name": "networkzone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "private",
                            "public"
                        ],
                        "type": "string",
                        "description": "Public or Private floater",
                        "name": "privateOrPublic",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a new cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Delete a server cluster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/example/helloworld": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project_information/ProjectsByTeam": {
            "get": {
                "description": "Get all projects by team requested.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Information"
                ],
                "summary": "Get projects by team ProjectsByTeam",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owning Team as defined in SNOW",
                        "name": "owning_team",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project_information/ServersByProject": {
            "get": {
                "description": "Displays all servers in a project by directly querying our metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Information"
                ],
                "summary": "Get servers by project.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID Number",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/project_information/ServersByProjectRaw": {
            "get": {
                "description": "Displays all servers in a project by directly querying Openstack.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project Information"
                ],
                "summary": "Get servers by project.",
                "parameters": [
                    {
                        "enum": [
                            "phx",
                            "sxb",
                            "iad"
                        ],
                        "type": "string",
                        "description": "Datacenter",
                        "name": "dc",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Name",
                        "name": "project",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user_information/GetTeams": {
            "get": {
                "description": "Displays all team names attached to a username. Will use currently logged in user by default.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Information"
                ],
                "summary": "Get teams as designated by SNOW.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username in DC1",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
