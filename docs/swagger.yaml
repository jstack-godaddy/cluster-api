info:
  contact: {}
paths:
  /basic_information/GetAllDataCenters:
    get:
      consumes:
      - application/json
      description: Get all the data centers we can provision to.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all the data centers we can provision to.
      tags:
      - Basic Information
  /basic_information/GetAllDatastores:
    get:
      consumes:
      - application/json
      description: Get all the data stores you can leverage.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all the data stores you can leverage.
      tags:
      - Basic Information
  /basic_information/GetAllEnvironments:
    get:
      consumes:
      - application/json
      description: Get all the environments we can provision to.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all the environments we can provision to.
      tags:
      - Basic Information
  /basic_information/GetAllFlavors:
    get:
      consumes:
      - application/json
      description: Get all the flavors we can provision on.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all the flavors we can provision on.
      tags:
      - Basic Information
  /basic_information/GetAllNetworkZones:
    get:
      consumes:
      - application/json
      description: Get all the network zones we can provision to.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all the network zones we can provision to.
      tags:
      - Basic Information
  /cluster:
    delete:
      consumes:
      - application/json
      description: Delete a new cluster.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete a server cluster
      tags:
      - Cluster
    post:
      consumes:
      - application/json
      description: Create a new cluster.
      parameters:
      - description: Datacenter the project is in.
        enum:
        - phx
        - sxb
        - iad
        in: query
        name: dc
        required: true
        type: string
      - description: Project Name to create the cluster into.
        in: query
        name: project
        required: true
        type: string
      - description: The friendly name for your identification.
        in: query
        name: name
        required: true
        type: string
      - description: Abbreviation for naming. Between 3 and 7 characters long.
        in: query
        maxLength: 7
        minLength: 3
        name: shortname
        required: true
        type: string
      - description: How big do you want it?
        enum:
        - c8.r16.d200
        - c12.r32.d300
        - c12.r64.d300
        - c16.r96.d900
        - c16.r128.d1200
        in: query
        name: flavor
        required: true
        type: string
      - description: Network Zone cluster will live in.
        enum:
        - prd
        - prd-public
        - mgt
        - cor
        in: query
        name: networkzone
        required: true
        type: string
      - description: Operating System for the cluster.
        enum:
        - almalinux8
        in: query
        name: os
        required: true
        type: string
      - description: Environment of cluster. Dev/Test/Stg/OTE/Prod
        enum:
        - d
        - t
        - s
        - o
        - p
        in: query
        name: env
        required: true
        type: string
      - description: Database Technology being leveraged.
        enum:
        - mysql8
        - mysql57
        in: query
        name: db
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create a server cluster
      tags:
      - Cluster
  /example/helloworld:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping example
      tags:
      - example
  /project_information/ProjectsByTeam:
    get:
      consumes:
      - application/json
      description: Get all projects by team requested.
      parameters:
      - description: Owning Team as defined in SNOW
        in: query
        name: owning_team
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get projects by team ProjectsByTeam
      tags:
      - Project Information
  /project_information/ServersByProject:
    get:
      consumes:
      - application/json
      description: Displays all servers in a project by directly querying our metadata.
      parameters:
      - description: Project ID Number
        in: query
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get servers by project.
      tags:
      - Project Information
  /project_information/ServersByProjectRaw:
    get:
      consumes:
      - application/json
      description: Displays all servers in a project by directly querying Openstack.
      parameters:
      - description: Datacenter
        enum:
        - phx
        - sxb
        - iad
        in: query
        name: dc
        required: true
        type: string
      - description: Project Name
        in: query
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get servers by project.
      tags:
      - Project Information
  /user_information/GetTeams:
    get:
      consumes:
      - application/json
      description: Displays all team names attached to a username. Will use currently
        logged in user by default.
      parameters:
      - description: Username in DC1
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get teams as designated by SNOW.
      tags:
      - User Information
swagger: "2.0"
